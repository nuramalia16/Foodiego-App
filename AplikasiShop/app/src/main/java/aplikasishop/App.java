/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package aplikasishop;

import java.util.ArrayList;
import java.util.List;

import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class App extends Application {
    private Stage primaryStage;
    private List<String>selectedFoods;
    private List<String>selectedDrinks;

    public static void main(String[] args) {
        launch(args);
    }
    @Override
    public void start(Stage primaryStage) {
        this.primaryStage = primaryStage;
        selectedFoods = new ArrayList<>();
        selectedDrinks = new ArrayList<>();
        primaryStage.setTitle("FoodieGo");
        primaryStage.setScene(createHomePage());
        primaryStage.show();
    }
    // Halaman Utama (Home Page)
    private Scene createHomePage() {
    // Gambar(Logo) Aplikasi
        Image FoodieGo = new Image("./FoodieGo.jpeg");
        ImageView foodieGoView = new ImageView(FoodieGo);
        foodieGoView.setFitWidth(200);
        foodieGoView.setFitHeight(200);
    // Tombol Masuk
        Button loginButton = new Button("Masuk");
        loginButton.setStyle("-fx-background-color: black; -fx-text-fill: white;");
        loginButton.setOnAction(e -> {
            primaryStage.setScene(createLoginPage());
        });
    // Penyatuan Secara vertikal
        VBox layout = new VBox(0);
        layout.getChildren().addAll(foodieGoView, loginButton);
        layout.setAlignment(Pos.CENTER);
        layout.setStyle("-fx-background-color: #FAF2E9; -fx-padding:20px");

        BorderPane pane = new BorderPane();
        pane.setCenter(layout);
        return new Scene(pane, 300, 500);
    }
    // Halaman ke dua (Login Page)
    private Scene createLoginPage() {
        Text loginTitle = new Text("Halaman Login");
        loginTitle.setFont(Font.font("Arial", FontWeight.BOLD, 20));

        Label usernameLabel = new Label("Username:");
        TextField usernameField = new TextField();
        Label passwordLabel = new Label("Password:");
        PasswordField passwordField = new PasswordField();
    // Tombol Login
        Button loginButton = new Button("Login");
        loginButton.setStyle("-fx-background-color: black; -fx-text-fill: white;");
        loginButton.setOnAction(e -> {
            String username = usernameField.getText();
            String password = passwordField.getText();
            // Validasi ketentuan username dan password
            boolean isValid = validateUsername(username) && validatePassword(password);
            if (isValid) {
                primaryStage.setScene(createCategorySelectionPage());
            } else {
                // Tampilkan pesan kesalahan login
                Alert alert = new Alert(Alert.AlertType.ERROR);
                alert.setTitle("Error");
                alert.setHeaderText("Login Gagal");
                alert.setContentText("Username atau password tidak valid!");
                alert.showAndWait();
            }
        });
    // Tombol Kembali
        Button backButton = new Button("Kembali");
        backButton.setStyle("-fx-background-color: black; -fx-text-fill: white;");
        backButton.setOnAction(e -> {
            primaryStage.setScene(createHomePage());
        });
        VBox layout = new VBox(40);
        layout.getChildren().addAll(loginTitle, usernameLabel, usernameField, passwordLabel, passwordField, loginButton, backButton);
        layout.setAlignment(Pos.CENTER);
        layout.setStyle("-fx-background-color: #FAF2E9; -fx-padding:20px");

        BorderPane pane = new BorderPane();
        pane.setCenter(layout);
        return new Scene(pane, 300, 500);
    }
    // Halaman  ke tiga (Pilihan Kategori)
    private Scene createCategorySelectionPage() {
        Text categoryTitle = new Text("Pilih Kategori");
        categoryTitle.setFont(Font.font("Arial", FontWeight.BOLD, 20));

        Button makanan = new Button("MAKANAN");
        makanan.setStyle("-fx-background-color: black; -fx-text-fill: white;");
        makanan.setOnAction(e -> {
            primaryStage.setScene(createFoodSelectionPage());
        });
        Button minuman = new Button("MINUMAN");
        minuman.setStyle("-fx-background-color: black; -fx-text-fill: white;");
        minuman.setOnAction(e -> {
            primaryStage.setScene(createDrinkSelectionPage());
        });
        Button backButton = new Button("Kembali");
        backButton.setStyle("-fx-background-color: black; -fx-text-fill: white;");
        backButton.setOnAction(e -> {
            primaryStage.setScene(createHomePage());
        });
        VBox layout = new VBox(20);
        layout.getChildren().addAll(categoryTitle,makanan,minuman, backButton);
        layout.setAlignment(Pos.CENTER);
        layout.setStyle("-fx-background-color: #FAF2E9; -fx-padding:20px");

        BorderPane pane = new BorderPane();
        pane.setCenter(layout);
        return new Scene(pane, 300, 500);
    }
    // Halaman ke 4 (Pilihan Makanan) 
    private Scene createFoodSelectionPage() {
        Text foodTitle = new Text("Pilih Makanan");
        foodTitle.setFont(Font.font("Arial", FontWeight.BOLD, 20));
        // Daftar makanan
        Image Burger = new Image("./Burger.png");
        ImageView burgerView = new ImageView(Burger);
        burgerView.setFitWidth(75);
        burgerView.setFitHeight(75);

        Text BurgerName = new Text("Burger");
        BurgerName.setFont(Font.font("Arial", FontWeight.BOLD, 10));

        Text hargaBurger = new Text("Rp 25.000");
        hargaBurger.setFont(Font.font("Arial", FontWeight.BOLD, 10));
        
        Image Hotodog = new Image("./Hotodog.png");
        ImageView hotodogView = new ImageView(Hotodog);
        hotodogView.setFitWidth(75);
        hotodogView.setFitHeight(75);

        Text HotDogName = new Text("Hot Dog");
        HotDogName.setFont(Font.font("Arial", FontWeight.BOLD, 10));

        Text hargaHotDog = new Text("Rp 20.000");
        hargaHotDog.setFont(Font.font("Arial", FontWeight.BOLD, 10));

        Image Pizza = new Image("./Pizza.png");
        ImageView pizzaView = new ImageView(Pizza);
        pizzaView.setFitWidth(75);
        pizzaView.setFitHeight(75);

        Text PizzaName = new Text("Pizza");
        PizzaName.setFont(Font.font("Arial", FontWeight.BOLD, 10));

        Text hargaPizza = new Text("Rp 50.000");
        hargaPizza.setFont(Font.font("Arial", FontWeight.BOLD, 10));

        Image Jasuke = new Image("./Jasuke.png");
        ImageView jasukView = new ImageView(Jasuke);
        jasukView.setFitWidth(75);
        jasukView.setFitHeight(75);

        Text jasukeName = new Text("Jasuke");
        jasukeName.setFont(Font.font("Arial", FontWeight.BOLD, 10));

        Text hargaJasuke = new Text("Rp 10.000");
        hargaJasuke.setFont(Font.font("Arial", FontWeight.BOLD, 10));

        Button tambahpesananButton = new Button("Tambah Pesanan");
        tambahpesananButton.setStyle("-fx-background-color: black; -fx-text-fill: white;");
        tambahpesananButton.setOnAction(e -> {
            primaryStage.setScene(createCategorySelectionPage());
        });

        Button backButton = new Button("Kembali");
        backButton.setStyle("-fx-background-color: black; -fx-text-fill: white;");
        backButton.setOnAction(e -> {
            primaryStage.setScene(createCategorySelectionPage());
        });

        Label JumlahBurger = new Label("Jumlah:");
        TextField inpBurger = new TextField();
        inpBurger.setStyle("-fx-padding:1px");

        VBox vbox1 =new VBox(10);
        vbox1.getChildren().addAll(BurgerName,hargaBurger);
        vbox1.setAlignment(Pos.CENTER);

        HBox hbox1 = new HBox(10);
        hbox1.getChildren().addAll(burgerView,vbox1);
        hbox1.setAlignment(Pos.CENTER);

        VBox inp1 = new VBox(10);
        inp1.getChildren().addAll(JumlahBurger,inpBurger);

        HBox gabungan1 = new HBox(20);
        gabungan1.getChildren().addAll(hbox1,inp1);

        
        Label JumlahHotdog = new Label("Jumlah:");
        TextField inpHotDog = new TextField();
        inpHotDog.setStyle("-fx-padding:1px");

        VBox vbox2 =new VBox(10);
        vbox2.getChildren().addAll(HotDogName,hargaHotDog);
        vbox2.setAlignment(Pos.CENTER);

        HBox hbox2 = new HBox(10);
        hbox2.getChildren().addAll(hotodogView,vbox2);
        hbox2.setAlignment(Pos.CENTER);

        VBox inp2 = new VBox(10);
        inp2.getChildren().addAll(JumlahHotdog,inpHotDog);

        HBox gabungan2 = new HBox(20);
        gabungan2.getChildren().addAll(hbox2,inp2);

        Label JumlahPizza = new Label("Jumlah:");
        TextField inpPizza = new TextField();
        inpHotDog.setStyle("-fx-padding:1px");

        VBox vbox3 =new VBox(10);
        vbox3.getChildren().addAll(PizzaName,hargaPizza);
        vbox3.setAlignment(Pos.CENTER);

        HBox hbox3 = new HBox(10);
        hbox3.getChildren().addAll(pizzaView,vbox3);
        hbox3.setAlignment(Pos.CENTER);

        VBox inp3 = new VBox(10);
        inp3.getChildren().addAll(JumlahPizza,inpPizza);

        HBox gabungan3 = new HBox(20);
        gabungan3.getChildren().addAll(hbox3,inp3);

        Label JumlahJasuke = new Label("Jumlah:");
        TextField inpJasuke = new TextField();
        inpHotDog.setStyle("-fx-padding:1px");

        VBox vbox4 =new VBox(10);
        vbox4.getChildren().addAll(jasukeName,hargaJasuke);
        vbox4.setAlignment(Pos.CENTER);

        HBox hbox4 = new HBox(10);
        hbox4.getChildren().addAll(jasukView,vbox4);
        hbox4.setAlignment(Pos.CENTER);

        VBox inp4 = new VBox(10);
        inp4.getChildren().addAll(JumlahJasuke,inpJasuke);

        HBox gabungan4 = new HBox(20);
        gabungan4.getChildren().addAll(hbox4,inp4);

        HBox Tombol1 = new HBox(30);
        Tombol1.getChildren().addAll(backButton,tambahpesananButton);

        VBox mainLayout = new VBox(10);
        mainLayout.getChildren().addAll(foodTitle,gabungan1,gabungan2, gabungan3, gabungan4,Tombol1);
        mainLayout.setAlignment(Pos.CENTER);
        mainLayout.setStyle("-fx-background-color: #FAF2E9; -fx-padding:20px");

        BorderPane pane = new BorderPane();
        pane.setCenter(mainLayout);

        return new Scene(pane, 300, 500);
    }
    // Halaman ke empat (Pilihan Minuman)
    private Scene createDrinkSelectionPage() {
        Text drinkTitle = new Text("Pilih Minuman");
        drinkTitle.setFont(Font.font("Arial", FontWeight.BOLD, 20));
        // Daftar minuman
        Image LemonTea = new Image("./LemonTea.png");
        ImageView lemonTeaView = new ImageView(LemonTea);
        lemonTeaView.setFitWidth(75);
        lemonTeaView.setFitHeight(75);

        Text LemonTeaName = new Text("Lemon Tea");
        LemonTeaName.setFont(Font.font("Arial", FontWeight.BOLD, 10));

        Text hargaLemontea = new Text("Rp 10.000");
        hargaLemontea.setFont(Font.font("Arial", FontWeight.BOLD, 10));

        Image ThaiTea = new Image("./ThaiTea.png");
        ImageView thaiTeeView = new ImageView(ThaiTea);
        thaiTeeView.setFitWidth(75);
        thaiTeeView.setFitHeight(75);

        Text ThaiTeaName = new Text("Thai Tea");
        ThaiTeaName.setFont(Font.font("Arial", FontWeight.BOLD, 10));

        Text hargaThaitea = new Text("Rp 10.000");
        hargaThaitea.setFont(Font.font("Arial", FontWeight.BOLD, 10));
   
        Button tambahpesananButton = new Button("Tambah Pesanan");
        tambahpesananButton.setStyle("-fx-background-color: black; -fx-text-fill: white;");
        tambahpesananButton.setOnAction(e -> {
            primaryStage.setScene(createCategorySelectionPage());
        });

        Button backButton = new Button("Kembali");
        backButton.setStyle("-fx-background-color: black; -fx-text-fill:white");
        backButton.setOnAction(e -> {
            primaryStage.setScene(createCategorySelectionPage());
        });

        Label Jumlahlemontea = new Label("Jumlah:");
        TextField inplemontea = new TextField();
        inplemontea.setStyle("-fx-padding:1px");

        VBox vbox5 =new VBox(10);
        vbox5.getChildren().addAll(LemonTeaName,hargaLemontea);
        vbox5.setAlignment(Pos.CENTER);

        HBox hbox5 = new HBox(10);
        hbox5.getChildren().addAll(lemonTeaView,vbox5);
        hbox5.setAlignment(Pos.CENTER);

        VBox inp5 = new VBox(10);
        inp5.getChildren().addAll(Jumlahlemontea,inplemontea);

        HBox gabungan5 = new HBox(20);
        gabungan5.getChildren().addAll(hbox5,inp5);

        Label Jumlahthaitea = new Label("Jumlah:");
        TextField inpthaitea = new TextField();
        inpthaitea.setStyle("-fx-padding:1px");

        VBox vbox6 =new VBox(10);
        vbox6.getChildren().addAll(ThaiTeaName,hargaThaitea);
        vbox6.setAlignment(Pos.CENTER);

        HBox hbox6 = new HBox(10);
        hbox6.getChildren().addAll(thaiTeeView, vbox6);
        hbox6.setAlignment(Pos.CENTER);
   
        VBox inp6 = new VBox(10);
        inp6.getChildren().addAll(Jumlahthaitea,inpthaitea);

        HBox gabungan6 = new HBox(20);
        gabungan6.getChildren().addAll(hbox6,inp6);

        HBox Tombol2 = new HBox(20);
        Tombol2.getChildren().addAll(backButton,tambahpesananButton);

        VBox mainLayout = new VBox(20);
        mainLayout.getChildren().addAll(drinkTitle,gabungan5, gabungan6,Tombol2);
        mainLayout.setAlignment(Pos.CENTER);
        mainLayout.setStyle("-fx-background-color: #FAF2E9; -fx-padding:20px");

        BorderPane pane = new BorderPane();
        pane.setCenter(mainLayout);

        return new Scene(pane, 300, 500);
    }
        // Konfirmasi Pemesanan (Order Confirmation)
        private void showOrderConfirmation(String item) {
            Alert alert = new Alert(Alert.AlertType.INFORMATION);
            alert.setTitle("Konfirmasi Pemesanan");
            alert.setHeaderText(null);
            alert.setContentText(item);
            alert.showAndWait();
        }
    // Validasi Username
    private boolean validateUsername(String username) {
        // Misalnya, validasi bahwa username harus terdiri dari huruf dan angka saja
        return username.matches("^[a-zA-Z0-9]{1,8}+$");
    }
    // Validasi Password
    private boolean validatePassword(String password) {
        // password harus memiliki panjang minimal 8 karakter
        // dan mengandung kombinasi huruf besar, huruf kecil, dan angka
        return password.length() >= 8 && password.matches(".*[A-Z].*") && password.matches(".*[a-z].*") && password.matches(".*\\d.*");
    }
}
